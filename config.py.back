'''
18.12.12 parkjp
app config에 전달하기 위한 class
만들어서 app config로 만든다
'''
import jwt
import socket
# DB settings
# LOCAL DEV
# HOST='localhost'
# PORT=3306
# USER='root'
# PASSWORD = ''
# DB ='BASEBALL'

secretKey = 'ai_data_discovery_crawler'
# token= b'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJwYXNzd29yZCI6IktAZ2JveCEyIn0.FE9WFVV7Vu3zTXTIUIw_OUI64zXcyTz4NUVQsydOhSI'
token= b'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJwYXNzd29yZCI6InM1Z05CdFdkNiJ9.FXHbo_LXKOuanquFZ6cKroqDZB8zLA-iRWFTqp3uWRU'

payload = jwt.decode(token, secretKey, algorithms=['HS256'])

# print (payload['password'])
# # DEV
# HOST='175.209.251.13'
# PORT=3306
# USER='ktdms'
# PASSWORD=payload['password']
# DB ='gbox'

# #VER
# HOST='192.168.200.129'
# PORT=3306
# USER='ktdms'
# PASSWORD=payload['password']
# DB ='gbox'

#smyu
# OP
#HOST='172.16.186.123'
#PORT=3306
#USER='ktdata'
#PASSWORD=payload['password']
#DB ='gbox'
HOST='localhost'
PORT=3306
USER='baseball'
#PASSWORD='baseball'
PASSWORD='testball'
DB ='BASEBALL'
#~smyu
wtimeout = 15

# crawler settings
SECRET = b'MCBftwfaePdG6WlYh3xf4CnM7AiGOPWP'
BASEKEY = '8Bh3YiZsHnzQjhx9nK892w=='
APIKEY = 'i3E8kEJIpAq9lSOHagdHZ19ZzB845htDBxZCpl5Le3k='

BASEURL = 'https://ktaijson.sports2i.com/Api'
# BASEURL = 'http://ktaijson.sports2i.com/Api'
REQUEST_TIME_OUT = 120


# lamp logger settings
SERVER_NAME = socket.gethostname()
def my_ip():
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    try:
        s.connect(('10.255.255.255', 1))
    except socket.error:
        return '127.0.0.1'
    return s.getsockname()[0]
SERVER_IP = my_ip()

# Logger Size
LOG_FILE_SIZE =None #1024 * 10

# flask settings
class config(object):
  SERVICES = ['crawler']
  # 만들고 open한 서비스에 대한 추가 API를 만들기
  # OPEN_SERVICES = ['battotal','iescoreinning','kboschedule','person','pittotal','score','teamrank']
  LOG_LEVEL = 'DEBUG'
  SHCEDULER = 'OFF'